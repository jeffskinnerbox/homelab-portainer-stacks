
# ------------------------------------------------------------------------------
#
# Maintainer:   jeffskinnerbox@yahoo.com / www.jeffskinnerbox.me
# Version:      1.0.0
#
# DESCRIPTION
#     Portainer, as a management interface for Docker, can be deployed in a
#     distributed manner to manage multiple Docker environments, allowing you
#     to easily build and manage containers in Docker, Docker Swarm, Kubernetes.
#
# TESTING
#     YAML linter to spot YAML syntax errors
#         yamllint docker-compose.yml
#     To start this docker container for validation
#         sudo docker-compose up -d --file /home/jeff/src/homelab-portainer-stacks/stacks/desktop/portainer/docker-compose.yml
#     To stop & remove container for compose file modification
#         sudo docker stop portainer
#         sudo docker rm portainer
#
# ACCESS
#     To access Portainer when deployed
#         http://<ip-of-your-server>:<port>, in my cased http://192.168.1.200:9000
#
# SOURCES
#     Portainer Documentation - https://docs.portainer.io/v/2.20
#
# ------------------------------------------------------------------------------

---

version: '3.2'

services:
  agent:
    image: portainer/agent:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ce:latest
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9443:9443"
      - "9000:9000"
      - "8000:8000"
    volumes:
      - portainer_data:/data
    networks:
      - agent_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

networks:
  agent_network:
    driver: overlay
    attachable: true

volumes:
  portainer_data:         # data is stored in /var/lib/docker/volumes

